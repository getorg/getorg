{
  "name": "Getorg",
  "tagline": "Get information and analytics about GitHub organizations",
  "body": "# getorg\r\nGet information and analytics about Github organizations. Extends the pygithub library for querying the Github API. Built for python 3 (python 2.6 does not work, python 2.7 currently works, but is not guaranteed to be supported in the future).\r\n\r\n## Installation\r\n### Basic functionality\r\n    pip install getorg\r\n### Mapping functionality in Jupyter notebooks (assuming Jupyter is installed)\r\n    pip install getorg ipyleaflet\r\n    jupyter nbextension enable --py ipyleaflet\r\n\r\n## Dependencies\r\n### Required (installed by pip)\r\n* githubPy library for querying the Github API.\r\n* geopy (specifically Nominatim) for geolocating locations.\r\n* retrying for dealing with timeouts and API rate limits\r\n\r\n### Recommended (not installed by pip)\r\n* Jupyter notebook, ipywidgets, and ipyleaflets for plotting maps.\r\n\r\n## Usage\r\n(See also the Jupyter notebooks in the examples folder)\r\n### Initialization\r\n    from github import Github\r\n    import getorg\r\n    \r\n    # A file named ghlogin.py, containing my login key in the variable gh_key\r\n    # Get an API key (for just querying, give it no write permissions) at https://github.com/settings/tokens\r\n    import ghlogin\r\n    \r\n    # You can leave login_or_token blank, but then you only get 60 queries an hour\r\n    gh = Github(login_or_token=ghlogin.gh_key)\r\n    \r\n### If you're in a Jupyter notebook with IPyleaflet support\r\n    In [4]: org_leaflet_map, org_location_dict, org_metadata_dict = getorg.orgmap.map_orgs(gh, \"getorg\")\r\n\r\n    In [5]: org_leaflet_map\r\n    Out[5]: [a map should be displayed]\r\n\r\n    In [6]: org_location_dict\r\n    Out[6]: {'https://api.github.com/users/staeiou': Location(Berkeley, Alameda County, California, United States of America, (37.8708393, -122.2728638, 0.0))}\r\n    \r\n    In [7]: org_metadata_dict\r\n    Out[7]: \r\n    {'duplicate_count': 0,\r\n     'error_count': 0,\r\n     'no_loc_count': 0,\r\n     'user_loc_count': 1}\r\n     \r\n    In [8]: getorg.orgmap.output_html_cluster_map(org_location_dict,\"cluster_map\")\r\n    Out[8]: \"Written map to cluster_map/map.html\"\r\n    \r\n### Or if you are not in a Jupyter notebook\r\n    In [4]: map, org_location_dict, org_metadata_dict = getorg.orgmap.map_orgs(gh,\"getorg\")\r\n    \r\n    In [5]: org_location_dict\r\n    Out[5]: \r\n    {'https://api.github.com/users/staeiou': Location(Berkeley, Alameda County, California, United States of America, (37.8708393, -122.2728638, 0.0))}\r\n    \r\n    In [6]: getorg.orgmap.output_html_cluster_map(org_location_dict,\"cluster_map\")\r\n    Out[6]: \"Written map to cluster_map/map.html\"\r\n\r\n## Credits\r\n\r\nGetorg is a package based on work originally done in [some Jupyter notebooks](https://github.com/staeiou/github-analytics) with [JamiesHQ](https://github.com/JamiesHQ), [Carreau](https://github.com/Carreau) and [namisaghaei](https://github.com/namisaghaei).\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}